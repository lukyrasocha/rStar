[
    {
        "id": 951,
        "problem": "The book is printed on paper that, when stacked, is {pages_per_inch} pages to the inch. Each paper is printed on both sides, with one page of the book printed on each side. How many pages are in the book, if it is {thickness} inches thick?",
        "variables": {
            "numerical": {
                "pages_per_inch": [50, 200],
                "thickness": [1, 5]
            }
        },
        "calculations": {
            "number_of_sheets": "thickness * pages_per_inch",
            "number_of_pages": "number_of_sheets * 2"
        },
        "conditions": {
            "number_of_sheets": [1, 1000],
            "number_of_pages": [1, 2000]
        },
        "solution": "There are {thickness}*{pages_per_inch}=<<{thickness}*{pages_per_inch}={number_of_sheets}>>{number_of_sheets} pieces of paper.\nThen there are {number_of_sheets}*2=<<{number_of_sheets}*2={number_of_pages}>>{number_of_pages} pages.\n#### {number_of_pages}"
    },
    {
    "id": 1139,
    "problem": "{name_m_0} orders his favorite bagels online. Each pack of bagels costs ${pack_cost} and has {bagels_per_pack} bagels in the pack. If he orders {num_packs} packs of bagels, he will receive a {discount_percentage}% discount. After ordering {num_packs} packs, how much will each single bagel cost?",
    "variables": {
        "numerical": {
            "pack_cost": [10, 10],  
            "bagels_per_pack": [5, 10, 5],  
            "num_packs": [2, 5],  
            "discount_percentage": [0, 50, 10]  
        }
    },
    "calculations": {
        "total_before_discount": "num_packs * pack_cost",
        "discount_amount": "(total_before_discount * discount_percentage) / 100",
        "total_after_discount": "total_before_discount - discount_amount",
        "total_bagels": "bagels_per_pack * num_packs",
        "cost_per_bagel": "total_after_discount / total_bagels"
    },
    "conditions": {
        "cost_per_bagel": [1, 5]
    },
    "solution": "He orders {num_packs} packs of bagels and each pack costs ${pack_cost}, so that's {num_packs} * {pack_cost} = $<<{num_packs}*{pack_cost}={total_before_discount}>>{total_before_discount}.\nHe receives a {discount_percentage}% discount, so his discount is {total_before_discount} * {discount_percentage} / 100 = $<<{total_before_discount}*{discount_percentage}/100={discount_amount}>>{discount_amount}.\nThe total cost after discount is {total_before_discount} - {discount_amount} = $<<{total_before_discount}-{discount_amount}={total_after_discount}>>{total_after_discount}.\nHe buys {bagels_per_pack} * {num_packs} = <<{bagels_per_pack}*{num_packs}={total_bagels}>>{total_bagels} bagels in total.\nEach bagel costs {total_after_discount} / {total_bagels} = $<<{total_after_discount}/{total_bagels}={cost_per_bagel}>>{cost_per_bagel}.\n#### {cost_per_bagel}"
},
    {
        "id": 13,
        "problem": "{name_f_0} is a door-to-door saleswoman. She sold a third of her vacuum cleaners at the green house, {sold_to_red} more to the red house, and half of what was left at the orange house. If {name_f_0} has {vacuum_left} vacuum cleaners left, how many did she start with?",
        "variables": {
            "numerical": {
                "sold_to_red": [2, 10],
                "vacuum_left": [1, 20]
            }
        },
        "calculations": {
            "before_orange": "vacuum_left * 2",
            "before_red": "before_orange + sold_to_red",
            "original_total": "before_red * 3 / 2"
        },
        "conditions": {
            "original_total": [1, 1000]
        },
        "solution": "First multiply the {vacuum_left} remaining vacuum cleaners by two to find out how many {name_f_0} had before she visited the orange house: {vacuum_left} * 2 = <<{vacuum_left}*2={before_orange}>>{before_orange}\nThen add {sold_to_red} to figure out how many vacuum cleaners she had before visiting the red house: {before_orange} + {sold_to_red} = <<{before_orange}+{sold_to_red}={before_red}>>{before_red}\nNow we know that 2/3 * x = {before_red}, where x is the number of vacuum cleaners {name_f_0} started with. We can find x by dividing each side of the equation by 2/3, which produces x = {original_total}\n#### {original_total}"
    },
    {
        "id": 581,
        "problem": "{name_m_0} plans to watch two movies this weekend. The first movie is {first_hours} hour and {first_minutes} minutes long while the second movie is {second_hours} hours and {second_minutes} minutes long. How many minutes will it take {name_m_0} to watch the two movies?",
        "variables": {
            "numerical": {
                "first_hours": [1, 2],
                "first_minutes": [30, 59],
                "second_hours": [2, 3],
                "second_minutes": [1, 59]
            }
        },
        "calculations": {
            "first_movie_hours_in_minutes": "first_hours * 60",
            "first_movie_length": "first_movie_hours_in_minutes + first_minutes",
            "second_movie_hours_in_minutes": "second_hours * 60",
            "second_movie_length": "second_movie_hours_in_minutes + second_minutes",
            "total_time": "first_movie_length + second_movie_length"
        },
        "conditions": {
            "total_time": [100, 400]
        },
        "solution": "One hour has 60 minutes.\nThe first movie is {first_movie_hours_in_minutes} + {first_minutes} = <<{first_movie_hours_in_minutes}+{first_minutes}={first_movie_length}>>{first_movie_length} minutes long.\n{second_hours} hours is equal to {second_hours} x 60 = <<{second_hours}*60={second_movie_hours_in_minutes}>>{second_movie_hours_in_minutes} minutes.\nThe second movie is {second_movie_hours_in_minutes} + {second_minutes} = <<{second_movie_hours_in_minutes}+{second_minutes}={second_movie_length}>>{second_movie_length} minutes long.\n{name_m_0} will take {first_movie_length} + {second_movie_length} = <<{first_movie_length}+{second_movie_length}={total_time}>>{total_time} minutes to watch the two movies.\n#### {total_time}"
    },
    {
        "id": 367,
        "problem": "{initial_customers} customers were kicked out of the Walmart for refusing to wear masks. A number equals to four times that many minus {subtract_value} were kicked out for shoplifting. Three times the number of shoplifters were kicked out for physical violence over goods on sale. If a total of {total_customers} people were kicked out of the Walmart, how many were kicked out for other reasons?",
        "variables": {
            "numerical": {
                "initial_customers": [2, 10],
                "subtract_value": [1, 5],
                "total_customers": [40, 100]
            }
        },
        "calculations": {
            "shoplifters_initial": "4 * initial_customers",
            "shoplifters": "shoplifters_initial - subtract_value",
            "violence": "shoplifters * 3",
            "others": "total_customers - initial_customers - shoplifters - violence"
        },
        "conditions": {
            "shoplifters": [1, 100],
            "violence": [1, 300],
            "others": [0, 100]
        },
        "solution": "First quadruple the number of customers kicked out for not wearing masks: 4 * {initial_customers} customers = <<4*{initial_customers}={shoplifters_initial}>>{shoplifters_initial} customers\nThen subtract {subtract_value} from this number: {shoplifters_initial} customers - {subtract_value} customers = <<{shoplifters_initial}-{subtract_value}={shoplifters}>>{shoplifters} customers\nThen triple that number to find the number of people kicked out for violence: {shoplifters} customers * 3 = <<{shoplifters}*3={violence}>>{violence} customers\nThen subtract the number of customers kicked out for each known reason to find the number kicked out for other reasons: {total_customers} customers - {initial_customers} customers - {shoplifters} customers - {violence} customers = <<{total_customers}-{initial_customers}-{shoplifters}-{violence}={others}>>{others} customers\n#### {others}"
    },
    {
        "id": 1180,
        "problem": "A company sold {total_gallons} gallons of milk in jars to Mr. {name_m_0}'s store at the cost of ${price_per_gallon} per gallon. However, Mr. {name_m_0} later realized {expired_fraction_numerator}/{expired_fraction_denominator} of the amount of milk he purchased had passed the expiry date and could not be sold. He returned the sour milk to the company and ordered a refund. Calculate how much he got in refunds.",
        "variables": {
            "numerical": {
                "total_gallons": [1000, 5000],
                "price_per_gallon": [2, 5],
                "expired_fraction_numerator": [1, 4],
                "expired_fraction_denominator": [5, 8]
            }
        },
        "calculations": {
            "expired_fraction": "expired_fraction_numerator / expired_fraction_denominator",
            "expired_gallons": "expired_fraction * total_gallons",
            "refund_amount": "price_per_gallon * expired_gallons"
        },
        "conditions": {
            "expired_gallons": [1, 1000],
            "refund_amount": [1, 5000]
        },
        "solution": "If he purchased {total_gallons} gallons, the number of gallons expired is {expired_fraction_numerator}/{expired_fraction_denominator} * {total_gallons} gallons = <<{expired_fraction_numerator}/{expired_fraction_denominator}*{total_gallons}={expired_gallons}>>{expired_gallons} gallons.\nIf each gallon costs ${price_per_gallon}, and he returned {expired_gallons} gallons for refund, the total amount he got from the refund is ${price_per_gallon}/gallon * {expired_gallons} gallons = $<<{price_per_gallon}*{expired_gallons}={refund_amount}>>{refund_amount}\n#### {refund_amount}"
    },
    {
        "id": 376,
        "problem": "There are {total_pupils} pupils in a class. Half of the class likes blue. One-fourth of the remaining likes green and the rest likes yellow. How many pupils like the color yellow?",
        "variables": {
            "numerical": {
                "total_pupils": [20, 100]
            }
        },
        "calculations": {
            "like_blue": "total_pupils / 2",
            "remaining_after_blue": "total_pupils - like_blue",
            "like_green": "remaining_after_blue / 4",
            "like_yellow": "remaining_after_blue - like_green"
        },
        "conditions": {
            "like_blue": [1, 100],
            "like_green": [1, 100],
            "like_yellow": [1, 100]
        },
        "solution": "There are {total_pupils}/2 = <<{total_pupils}/2={like_blue}>>{like_blue} pupils who like blue.\nSo, there are now {total_pupils} - {like_blue} = <<{total_pupils}-{like_blue}={remaining_after_blue}>>{remaining_after_blue} pupils who like either green or yellow.\nHence, {remaining_after_blue}/4 = <<{remaining_after_blue}/4={like_green}>>{like_green} pupils like green.\nThus, {remaining_after_blue} - {like_green} = <<{remaining_after_blue}-{like_green}={like_yellow}>>{like_yellow} pupils like yellow.\n#### {like_yellow}"
    },
    {
        "id": 1254,
        "problem": "{name_f_0} is an artist and needs to apply a coat of varnish to her latest paintings. Usually it takes {old_time} minutes for the coat of varnish to dry on one painting. However, today she is using a new varnish and it takes {new_time} minutes for the coat to dry. How much longer will it take for the coat of varnish on {number_of_paintings} paintings with the new varnish to dry as it would with the old varnish?",
        "variables": {
            "numerical": {
                "old_time": [5, 15],
                "new_time": [16, 30],
                "number_of_paintings": [2, 10]
            }
        },
        "calculations": {
            "total_old_time": "old_time * number_of_paintings",
            "total_new_time": "new_time * number_of_paintings",
            "extra_time": "total_new_time - total_old_time"
        },
        "conditions": {
            "extra_time": [1, 300]
        },
        "solution": "Usually, the varnish on all {number_of_paintings} paintings would be dry in {old_time} * {number_of_paintings} = <<{old_time}*{number_of_paintings}={total_old_time}>>{total_old_time} minutes\nWith the new varnish, all {number_of_paintings} paintings would be dry in {new_time} * {number_of_paintings} = <<{new_time}*{number_of_paintings}={total_new_time}>>{total_new_time} minutes\nWith the new varnish, it will take {total_new_time} - {total_old_time} = <<{total_new_time}-{total_old_time}={extra_time}>>{extra_time} more minutes\n#### {extra_time}"
    }

]